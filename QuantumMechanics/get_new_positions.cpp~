#include <cstdio>
#include <cstdlib>
#include <ctime>
#include "dummy2.h"
using namespace std;

// INPUTS
//		step: the maximum distance two successive positions can vary
//		r_init: 2x3 matrix corresponding to the initial positions of the electrons
//		N: the number of positions to be generated

// OUPUT
//		out: a Nx2x3 array of positions

// To use this code, just replace "dummy2" by the function that calculates the wave function

float*** get_new_positions(float step,float** r_init,int N)
{
	int i,j,l;	
	int k=0;

	float*** out = new float**[N]; 	// The output is a Nx2x3 array
	out[0] = r_init;				// First position is r_init

	float random = 0;				
	srand(time(NULL));

	for (l=1; l<N; l++){
		out[l] = new float*[2];
		random = dummy2(out[l-1])*dummy2(out[l-1]) * (float)rand()/(float)RAND_MAX; 

// "random" is the old wave function squared times a random number in the range 0 -- 1, we want a new position such that the new wave function squared is bigger than this quantity

		do{
				for(i=0; i<2; i++){
					out[l][i] = new float[3];
					for(j=0; j<3; j++){		
						out[l][i][j] = out[l-1][i][j] + step*(2*(float)rand()/(float)RAND_MAX - 1);
					}	
				}
	 	}while((dummy2(out[l])*dummy2(out[l])<random)&&k<100); // the number of iterations is limited by "k<100" but this limit is never reached
	}
	return out;
}
